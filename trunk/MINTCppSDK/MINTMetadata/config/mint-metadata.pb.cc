// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mint-metadata.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mint {
namespace metadata {

namespace {

const ::google::protobuf::Descriptor* StudyData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StudyData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeriesData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeriesData_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstanceData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstanceData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2fmint_2dmetadata_2eproto() {
  protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config/mint-metadata.proto");
  GOOGLE_CHECK(file != NULL);
  StudyData_descriptor_ = file->message_type(0);
  static const int StudyData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, study_instance_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, instance_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, series_),
  };
  StudyData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StudyData_descriptor_,
      StudyData::default_instance_,
      StudyData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StudyData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StudyData));
  SeriesData_descriptor_ = file->message_type(1);
  static const int SeriesData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, series_instance_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, exclude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, instance_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, normalized_instance_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, instances_),
  };
  SeriesData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SeriesData_descriptor_,
      SeriesData::default_instance_,
      SeriesData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeriesData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SeriesData));
  InstanceData_descriptor_ = file->message_type(2);
  static const int InstanceData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, sop_instance_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, exclude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, transfer_syntax_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, attributes_),
  };
  InstanceData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InstanceData_descriptor_,
      InstanceData::default_instance_,
      InstanceData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InstanceData));
  AttributeData_descriptor_ = file->message_type(3);
  static const int AttributeData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, exclude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, vr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, string_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, binary_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, binary_item_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, frame_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, items_),
  };
  AttributeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttributeData_descriptor_,
      AttributeData::default_instance_,
      AttributeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttributeData));
  ItemData_descriptor_ = file->message_type(4);
  static const int ItemData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, attributes_),
  };
  ItemData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemData_descriptor_,
      ItemData::default_instance_,
      ItemData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2fmint_2dmetadata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StudyData_descriptor_, &StudyData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SeriesData_descriptor_, &SeriesData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InstanceData_descriptor_, &InstanceData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttributeData_descriptor_, &AttributeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemData_descriptor_, &ItemData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2fmint_2dmetadata_2eproto() {
  delete StudyData::default_instance_;
  delete StudyData_reflection_;
  delete SeriesData::default_instance_;
  delete SeriesData_reflection_;
  delete InstanceData::default_instance_;
  delete InstanceData_reflection_;
  delete AttributeData::default_instance_;
  delete AttributeData_reflection_;
  delete ItemData::default_instance_;
  delete ItemData_reflection_;
}

void protobuf_AddDesc_config_2fmint_2dmetadata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032config/mint-metadata.proto\022\rmint.metad"
    "ata\"\273\001\n\tStudyData\022\032\n\022study_instance_uid\030"
    "\001 \001(\t\022\014\n\004type\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\026\n\016"
    "instance_count\030\006 \001(\r\0220\n\nattributes\030\002 \003(\013"
    "2\034.mint.metadata.AttributeData\022)\n\006series"
    "\030\003 \003(\0132\031.mint.metadata.SeriesData\"\372\001\n\nSe"
    "riesData\022\033\n\023series_instance_uid\030\001 \001(\t\022\017\n"
    "\007exclude\030\002 \001(\t\022\026\n\016instance_count\030\006 \001(\r\0220"
    "\n\nattributes\030\003 \003(\0132\034.mint.metadata.Attri"
    "buteData\022D\n\036normalized_instance_attribut"
    "es\030\004 \003(\0132\034.mint.metadata.AttributeData\022."
    "\n\tinstances\030\005 \003(\0132\033.mint.metadata.Instan"
    "ceData\"\210\001\n\014InstanceData\022\030\n\020sop_instance_"
    "uid\030\001 \001(\t\022\017\n\007exclude\030\002 \001(\t\022\033\n\023transfer_s"
    "yntax_uid\030\003 \001(\t\0220\n\nattributes\030\004 \003(\0132\034.mi"
    "nt.metadata.AttributeData\"\315\001\n\rAttributeD"
    "ata\022\013\n\003tag\030\001 \001(\r\022\017\n\007exclude\030\002 \001(\t\022\n\n\002vr\030"
    "\003 \001(\t\022\024\n\014string_value\030\004 \001(\t\022\026\n\016binary_it"
    "em_id\030\005 \001(\r\022\030\n\020binary_item_size\030\t \001(\r\022\023\n"
    "\013frame_count\030\010 \001(\r\022\r\n\005bytes\030\007 \001(\014\022&\n\005ite"
    "ms\030\006 \003(\0132\027.mint.metadata.ItemData\"<\n\010Ite"
    "mData\0220\n\nattributes\030\001 \003(\0132\034.mint.metadat"
    "a.AttributeDataB\002H\001", 899);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config/mint-metadata.proto", &protobuf_RegisterTypes);
  StudyData::default_instance_ = new StudyData();
  SeriesData::default_instance_ = new SeriesData();
  InstanceData::default_instance_ = new InstanceData();
  AttributeData::default_instance_ = new AttributeData();
  ItemData::default_instance_ = new ItemData();
  StudyData::default_instance_->InitAsDefaultInstance();
  SeriesData::default_instance_->InitAsDefaultInstance();
  InstanceData::default_instance_->InitAsDefaultInstance();
  AttributeData::default_instance_->InitAsDefaultInstance();
  ItemData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2fmint_2dmetadata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2fmint_2dmetadata_2eproto {
  StaticDescriptorInitializer_config_2fmint_2dmetadata_2eproto() {
    protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();
  }
} static_descriptor_initializer_config_2fmint_2dmetadata_2eproto_;


// ===================================================================

const ::std::string StudyData::_default_study_instance_uid_;
const ::std::string StudyData::_default_type_;
const ::std::string StudyData::_default_version_;
#ifndef _MSC_VER
const int StudyData::kStudyInstanceUidFieldNumber;
const int StudyData::kTypeFieldNumber;
const int StudyData::kVersionFieldNumber;
const int StudyData::kInstanceCountFieldNumber;
const int StudyData::kAttributesFieldNumber;
const int StudyData::kSeriesFieldNumber;
#endif  // !_MSC_VER

StudyData::StudyData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StudyData::InitAsDefaultInstance() {
}

StudyData::StudyData(const StudyData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StudyData::SharedCtor() {
  _cached_size_ = 0;
  study_instance_uid_ = const_cast< ::std::string*>(&_default_study_instance_uid_);
  type_ = const_cast< ::std::string*>(&_default_type_);
  version_ = const_cast< ::std::string*>(&_default_version_);
  instance_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StudyData::~StudyData() {
  SharedDtor();
}

void StudyData::SharedDtor() {
  if (study_instance_uid_ != &_default_study_instance_uid_) {
    delete study_instance_uid_;
  }
  if (type_ != &_default_type_) {
    delete type_;
  }
  if (version_ != &_default_version_) {
    delete version_;
  }
  if (this != default_instance_) {
  }
}

void StudyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StudyData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StudyData_descriptor_;
}

const StudyData& StudyData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();  return *default_instance_;
}

StudyData* StudyData::default_instance_ = NULL;

StudyData* StudyData::New() const {
  return new StudyData;
}

void StudyData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (study_instance_uid_ != &_default_study_instance_uid_) {
        study_instance_uid_->clear();
      }
    }
    if (_has_bit(1)) {
      if (type_ != &_default_type_) {
        type_->clear();
      }
    }
    if (_has_bit(2)) {
      if (version_ != &_default_version_) {
        version_->clear();
      }
    }
    instance_count_ = 0u;
  }
  attributes_.Clear();
  series_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StudyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string study_instance_uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_study_instance_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->study_instance_uid().data(), this->study_instance_uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attributes;
        break;
      }
      
      // repeated .mint.metadata.AttributeData attributes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attributes;
        if (input->ExpectTag(26)) goto parse_series;
        break;
      }
      
      // repeated .mint.metadata.SeriesData series = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_series:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_series()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_series;
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }
      
      // optional string type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_version;
        break;
      }
      
      // optional string version = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_instance_count;
        break;
      }
      
      // optional uint32 instance_count = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instance_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_count_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StudyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string study_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->study_instance_uid().data(), this->study_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->study_instance_uid(), output);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 2;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attributes(i), output);
  }
  
  // repeated .mint.metadata.SeriesData series = 3;
  for (int i = 0; i < this->series_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->series(i), output);
  }
  
  // optional string type = 4;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->type(), output);
  }
  
  // optional string version = 5;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->version(), output);
  }
  
  // optional uint32 instance_count = 6;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->instance_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StudyData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string study_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->study_instance_uid().data(), this->study_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->study_instance_uid(), target);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 2;
  for (int i = 0; i < this->attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attributes(i), target);
  }
  
  // repeated .mint.metadata.SeriesData series = 3;
  for (int i = 0; i < this->series_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->series(i), target);
  }
  
  // optional string type = 4;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }
  
  // optional string version = 5;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }
  
  // optional uint32 instance_count = 6;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->instance_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StudyData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string study_instance_uid = 1;
    if (has_study_instance_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->study_instance_uid());
    }
    
    // optional string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // optional string version = 5;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }
    
    // optional uint32 instance_count = 6;
    if (has_instance_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->instance_count());
    }
    
  }
  // repeated .mint.metadata.AttributeData attributes = 2;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes(i));
  }
  
  // repeated .mint.metadata.SeriesData series = 3;
  total_size += 1 * this->series_size();
  for (int i = 0; i < this->series_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->series(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StudyData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StudyData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StudyData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StudyData::MergeFrom(const StudyData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributes_.MergeFrom(from.attributes_);
  series_.MergeFrom(from.series_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_study_instance_uid(from.study_instance_uid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      set_version(from.version());
    }
    if (from._has_bit(3)) {
      set_instance_count(from.instance_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StudyData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StudyData::CopyFrom(const StudyData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StudyData::IsInitialized() const {
  
  return true;
}

void StudyData::Swap(StudyData* other) {
  if (other != this) {
    std::swap(study_instance_uid_, other->study_instance_uid_);
    std::swap(type_, other->type_);
    std::swap(version_, other->version_);
    std::swap(instance_count_, other->instance_count_);
    attributes_.Swap(&other->attributes_);
    series_.Swap(&other->series_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StudyData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StudyData_descriptor_;
  metadata.reflection = StudyData_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string SeriesData::_default_series_instance_uid_;
const ::std::string SeriesData::_default_exclude_;
#ifndef _MSC_VER
const int SeriesData::kSeriesInstanceUidFieldNumber;
const int SeriesData::kExcludeFieldNumber;
const int SeriesData::kInstanceCountFieldNumber;
const int SeriesData::kAttributesFieldNumber;
const int SeriesData::kNormalizedInstanceAttributesFieldNumber;
const int SeriesData::kInstancesFieldNumber;
#endif  // !_MSC_VER

SeriesData::SeriesData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SeriesData::InitAsDefaultInstance() {
}

SeriesData::SeriesData(const SeriesData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SeriesData::SharedCtor() {
  _cached_size_ = 0;
  series_instance_uid_ = const_cast< ::std::string*>(&_default_series_instance_uid_);
  exclude_ = const_cast< ::std::string*>(&_default_exclude_);
  instance_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SeriesData::~SeriesData() {
  SharedDtor();
}

void SeriesData::SharedDtor() {
  if (series_instance_uid_ != &_default_series_instance_uid_) {
    delete series_instance_uid_;
  }
  if (exclude_ != &_default_exclude_) {
    delete exclude_;
  }
  if (this != default_instance_) {
  }
}

void SeriesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeriesData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeriesData_descriptor_;
}

const SeriesData& SeriesData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();  return *default_instance_;
}

SeriesData* SeriesData::default_instance_ = NULL;

SeriesData* SeriesData::New() const {
  return new SeriesData;
}

void SeriesData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (series_instance_uid_ != &_default_series_instance_uid_) {
        series_instance_uid_->clear();
      }
    }
    if (_has_bit(1)) {
      if (exclude_ != &_default_exclude_) {
        exclude_->clear();
      }
    }
    instance_count_ = 0u;
  }
  attributes_.Clear();
  normalized_instance_attributes_.Clear();
  instances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SeriesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string series_instance_uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_series_instance_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->series_instance_uid().data(), this->series_instance_uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_exclude;
        break;
      }
      
      // optional string exclude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exclude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exclude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->exclude().data(), this->exclude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        break;
      }
      
      // repeated .mint.metadata.AttributeData attributes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        if (input->ExpectTag(34)) goto parse_normalized_instance_attributes;
        break;
      }
      
      // repeated .mint.metadata.AttributeData normalized_instance_attributes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normalized_instance_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normalized_instance_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_normalized_instance_attributes;
        if (input->ExpectTag(42)) goto parse_instances;
        break;
      }
      
      // repeated .mint.metadata.InstanceData instances = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_instances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instances()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_instances;
        if (input->ExpectTag(48)) goto parse_instance_count;
        break;
      }
      
      // optional uint32 instance_count = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instance_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_count_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SeriesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string series_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->series_instance_uid().data(), this->series_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->series_instance_uid(), output);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exclude(), output);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 3;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attributes(i), output);
  }
  
  // repeated .mint.metadata.AttributeData normalized_instance_attributes = 4;
  for (int i = 0; i < this->normalized_instance_attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->normalized_instance_attributes(i), output);
  }
  
  // repeated .mint.metadata.InstanceData instances = 5;
  for (int i = 0; i < this->instances_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->instances(i), output);
  }
  
  // optional uint32 instance_count = 6;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->instance_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SeriesData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string series_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->series_instance_uid().data(), this->series_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->series_instance_uid(), target);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exclude(), target);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 3;
  for (int i = 0; i < this->attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attributes(i), target);
  }
  
  // repeated .mint.metadata.AttributeData normalized_instance_attributes = 4;
  for (int i = 0; i < this->normalized_instance_attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->normalized_instance_attributes(i), target);
  }
  
  // repeated .mint.metadata.InstanceData instances = 5;
  for (int i = 0; i < this->instances_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->instances(i), target);
  }
  
  // optional uint32 instance_count = 6;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->instance_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SeriesData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string series_instance_uid = 1;
    if (has_series_instance_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->series_instance_uid());
    }
    
    // optional string exclude = 2;
    if (has_exclude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exclude());
    }
    
    // optional uint32 instance_count = 6;
    if (has_instance_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->instance_count());
    }
    
  }
  // repeated .mint.metadata.AttributeData attributes = 3;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes(i));
  }
  
  // repeated .mint.metadata.AttributeData normalized_instance_attributes = 4;
  total_size += 1 * this->normalized_instance_attributes_size();
  for (int i = 0; i < this->normalized_instance_attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normalized_instance_attributes(i));
  }
  
  // repeated .mint.metadata.InstanceData instances = 5;
  total_size += 1 * this->instances_size();
  for (int i = 0; i < this->instances_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instances(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeriesData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SeriesData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SeriesData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SeriesData::MergeFrom(const SeriesData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributes_.MergeFrom(from.attributes_);
  normalized_instance_attributes_.MergeFrom(from.normalized_instance_attributes_);
  instances_.MergeFrom(from.instances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_series_instance_uid(from.series_instance_uid());
    }
    if (from._has_bit(1)) {
      set_exclude(from.exclude());
    }
    if (from._has_bit(2)) {
      set_instance_count(from.instance_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SeriesData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeriesData::CopyFrom(const SeriesData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeriesData::IsInitialized() const {
  
  return true;
}

void SeriesData::Swap(SeriesData* other) {
  if (other != this) {
    std::swap(series_instance_uid_, other->series_instance_uid_);
    std::swap(exclude_, other->exclude_);
    std::swap(instance_count_, other->instance_count_);
    attributes_.Swap(&other->attributes_);
    normalized_instance_attributes_.Swap(&other->normalized_instance_attributes_);
    instances_.Swap(&other->instances_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SeriesData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeriesData_descriptor_;
  metadata.reflection = SeriesData_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string InstanceData::_default_sop_instance_uid_;
const ::std::string InstanceData::_default_exclude_;
const ::std::string InstanceData::_default_transfer_syntax_uid_;
#ifndef _MSC_VER
const int InstanceData::kSopInstanceUidFieldNumber;
const int InstanceData::kExcludeFieldNumber;
const int InstanceData::kTransferSyntaxUidFieldNumber;
const int InstanceData::kAttributesFieldNumber;
#endif  // !_MSC_VER

InstanceData::InstanceData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InstanceData::InitAsDefaultInstance() {
}

InstanceData::InstanceData(const InstanceData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InstanceData::SharedCtor() {
  _cached_size_ = 0;
  sop_instance_uid_ = const_cast< ::std::string*>(&_default_sop_instance_uid_);
  exclude_ = const_cast< ::std::string*>(&_default_exclude_);
  transfer_syntax_uid_ = const_cast< ::std::string*>(&_default_transfer_syntax_uid_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstanceData::~InstanceData() {
  SharedDtor();
}

void InstanceData::SharedDtor() {
  if (sop_instance_uid_ != &_default_sop_instance_uid_) {
    delete sop_instance_uid_;
  }
  if (exclude_ != &_default_exclude_) {
    delete exclude_;
  }
  if (transfer_syntax_uid_ != &_default_transfer_syntax_uid_) {
    delete transfer_syntax_uid_;
  }
  if (this != default_instance_) {
  }
}

void InstanceData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstanceData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstanceData_descriptor_;
}

const InstanceData& InstanceData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();  return *default_instance_;
}

InstanceData* InstanceData::default_instance_ = NULL;

InstanceData* InstanceData::New() const {
  return new InstanceData;
}

void InstanceData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (sop_instance_uid_ != &_default_sop_instance_uid_) {
        sop_instance_uid_->clear();
      }
    }
    if (_has_bit(1)) {
      if (exclude_ != &_default_exclude_) {
        exclude_->clear();
      }
    }
    if (_has_bit(2)) {
      if (transfer_syntax_uid_ != &_default_transfer_syntax_uid_) {
        transfer_syntax_uid_->clear();
      }
    }
  }
  attributes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InstanceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sop_instance_uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sop_instance_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sop_instance_uid().data(), this->sop_instance_uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_exclude;
        break;
      }
      
      // optional string exclude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exclude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exclude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->exclude().data(), this->exclude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_transfer_syntax_uid;
        break;
      }
      
      // optional string transfer_syntax_uid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transfer_syntax_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer_syntax_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transfer_syntax_uid().data(), this->transfer_syntax_uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attributes;
        break;
      }
      
      // repeated .mint.metadata.AttributeData attributes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attributes;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InstanceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string sop_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sop_instance_uid().data(), this->sop_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sop_instance_uid(), output);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exclude(), output);
  }
  
  // optional string transfer_syntax_uid = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transfer_syntax_uid().data(), this->transfer_syntax_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->transfer_syntax_uid(), output);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 4;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attributes(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InstanceData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string sop_instance_uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sop_instance_uid().data(), this->sop_instance_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sop_instance_uid(), target);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exclude(), target);
  }
  
  // optional string transfer_syntax_uid = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transfer_syntax_uid().data(), this->transfer_syntax_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transfer_syntax_uid(), target);
  }
  
  // repeated .mint.metadata.AttributeData attributes = 4;
  for (int i = 0; i < this->attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attributes(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InstanceData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sop_instance_uid = 1;
    if (has_sop_instance_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sop_instance_uid());
    }
    
    // optional string exclude = 2;
    if (has_exclude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exclude());
    }
    
    // optional string transfer_syntax_uid = 3;
    if (has_transfer_syntax_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transfer_syntax_uid());
    }
    
  }
  // repeated .mint.metadata.AttributeData attributes = 4;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstanceData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InstanceData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InstanceData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InstanceData::MergeFrom(const InstanceData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributes_.MergeFrom(from.attributes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sop_instance_uid(from.sop_instance_uid());
    }
    if (from._has_bit(1)) {
      set_exclude(from.exclude());
    }
    if (from._has_bit(2)) {
      set_transfer_syntax_uid(from.transfer_syntax_uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InstanceData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstanceData::CopyFrom(const InstanceData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstanceData::IsInitialized() const {
  
  return true;
}

void InstanceData::Swap(InstanceData* other) {
  if (other != this) {
    std::swap(sop_instance_uid_, other->sop_instance_uid_);
    std::swap(exclude_, other->exclude_);
    std::swap(transfer_syntax_uid_, other->transfer_syntax_uid_);
    attributes_.Swap(&other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InstanceData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstanceData_descriptor_;
  metadata.reflection = InstanceData_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string AttributeData::_default_exclude_;
const ::std::string AttributeData::_default_vr_;
const ::std::string AttributeData::_default_string_value_;
const ::std::string AttributeData::_default_bytes_;
#ifndef _MSC_VER
const int AttributeData::kTagFieldNumber;
const int AttributeData::kExcludeFieldNumber;
const int AttributeData::kVrFieldNumber;
const int AttributeData::kStringValueFieldNumber;
const int AttributeData::kBinaryItemIdFieldNumber;
const int AttributeData::kBinaryItemSizeFieldNumber;
const int AttributeData::kFrameCountFieldNumber;
const int AttributeData::kBytesFieldNumber;
const int AttributeData::kItemsFieldNumber;
#endif  // !_MSC_VER

AttributeData::AttributeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AttributeData::InitAsDefaultInstance() {
}

AttributeData::AttributeData(const AttributeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AttributeData::SharedCtor() {
  _cached_size_ = 0;
  tag_ = 0u;
  exclude_ = const_cast< ::std::string*>(&_default_exclude_);
  vr_ = const_cast< ::std::string*>(&_default_vr_);
  string_value_ = const_cast< ::std::string*>(&_default_string_value_);
  binary_item_id_ = 0u;
  binary_item_size_ = 0u;
  frame_count_ = 0u;
  bytes_ = const_cast< ::std::string*>(&_default_bytes_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttributeData::~AttributeData() {
  SharedDtor();
}

void AttributeData::SharedDtor() {
  if (exclude_ != &_default_exclude_) {
    delete exclude_;
  }
  if (vr_ != &_default_vr_) {
    delete vr_;
  }
  if (string_value_ != &_default_string_value_) {
    delete string_value_;
  }
  if (bytes_ != &_default_bytes_) {
    delete bytes_;
  }
  if (this != default_instance_) {
  }
}

void AttributeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeData_descriptor_;
}

const AttributeData& AttributeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();  return *default_instance_;
}

AttributeData* AttributeData::default_instance_ = NULL;

AttributeData* AttributeData::New() const {
  return new AttributeData;
}

void AttributeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tag_ = 0u;
    if (_has_bit(1)) {
      if (exclude_ != &_default_exclude_) {
        exclude_->clear();
      }
    }
    if (_has_bit(2)) {
      if (vr_ != &_default_vr_) {
        vr_->clear();
      }
    }
    if (_has_bit(3)) {
      if (string_value_ != &_default_string_value_) {
        string_value_->clear();
      }
    }
    binary_item_id_ = 0u;
    binary_item_size_ = 0u;
    frame_count_ = 0u;
    if (_has_bit(7)) {
      if (bytes_ != &_default_bytes_) {
        bytes_->clear();
      }
    }
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttributeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_exclude;
        break;
      }
      
      // optional string exclude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exclude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exclude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->exclude().data(), this->exclude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_vr;
        break;
      }
      
      // optional string vr = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vr().data(), this->vr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_string_value;
        break;
      }
      
      // optional string string_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_binary_item_id;
        break;
      }
      
      // optional uint32 binary_item_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_binary_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &binary_item_id_)));
          _set_bit(4);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_items;
        break;
      }
      
      // repeated .mint.metadata.ItemData items = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_items;
        if (input->ExpectTag(58)) goto parse_bytes;
        break;
      }
      
      // optional bytes bytes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_frame_count;
        break;
      }
      
      // optional uint32 frame_count = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_frame_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_count_)));
          _set_bit(6);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_binary_item_size;
        break;
      }
      
      // optional uint32 binary_item_size = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_binary_item_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &binary_item_size_)));
          _set_bit(5);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AttributeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 tag = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tag(), output);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exclude(), output);
  }
  
  // optional string vr = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vr().data(), this->vr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->vr(), output);
  }
  
  // optional string string_value = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->string_value(), output);
  }
  
  // optional uint32 binary_item_id = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->binary_item_id(), output);
  }
  
  // repeated .mint.metadata.ItemData items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->items(i), output);
  }
  
  // optional bytes bytes = 7;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->bytes(), output);
  }
  
  // optional uint32 frame_count = 8;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->frame_count(), output);
  }
  
  // optional uint32 binary_item_size = 9;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->binary_item_size(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AttributeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 tag = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tag(), target);
  }
  
  // optional string exclude = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exclude().data(), this->exclude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exclude(), target);
  }
  
  // optional string vr = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vr().data(), this->vr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vr(), target);
  }
  
  // optional string string_value = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }
  
  // optional uint32 binary_item_id = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->binary_item_id(), target);
  }
  
  // repeated .mint.metadata.ItemData items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->items(i), target);
  }
  
  // optional bytes bytes = 7;
  if (_has_bit(7)) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->bytes(), target);
  }
  
  // optional uint32 frame_count = 8;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->frame_count(), target);
  }
  
  // optional uint32 binary_item_size = 9;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->binary_item_size(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AttributeData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 tag = 1;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag());
    }
    
    // optional string exclude = 2;
    if (has_exclude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exclude());
    }
    
    // optional string vr = 3;
    if (has_vr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr());
    }
    
    // optional string string_value = 4;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }
    
    // optional uint32 binary_item_id = 5;
    if (has_binary_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->binary_item_id());
    }
    
    // optional uint32 binary_item_size = 9;
    if (has_binary_item_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->binary_item_size());
    }
    
    // optional uint32 frame_count = 8;
    if (has_frame_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->frame_count());
    }
    
    // optional bytes bytes = 7;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
    }
    
  }
  // repeated .mint.metadata.ItemData items = 6;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttributeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttributeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttributeData::MergeFrom(const AttributeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_tag(from.tag());
    }
    if (from._has_bit(1)) {
      set_exclude(from.exclude());
    }
    if (from._has_bit(2)) {
      set_vr(from.vr());
    }
    if (from._has_bit(3)) {
      set_string_value(from.string_value());
    }
    if (from._has_bit(4)) {
      set_binary_item_id(from.binary_item_id());
    }
    if (from._has_bit(5)) {
      set_binary_item_size(from.binary_item_size());
    }
    if (from._has_bit(6)) {
      set_frame_count(from.frame_count());
    }
    if (from._has_bit(7)) {
      set_bytes(from.bytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttributeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeData::CopyFrom(const AttributeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeData::IsInitialized() const {
  
  return true;
}

void AttributeData::Swap(AttributeData* other) {
  if (other != this) {
    std::swap(tag_, other->tag_);
    std::swap(exclude_, other->exclude_);
    std::swap(vr_, other->vr_);
    std::swap(string_value_, other->string_value_);
    std::swap(binary_item_id_, other->binary_item_id_);
    std::swap(binary_item_size_, other->binary_item_size_);
    std::swap(frame_count_, other->frame_count_);
    std::swap(bytes_, other->bytes_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttributeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeData_descriptor_;
  metadata.reflection = AttributeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemData::kAttributesFieldNumber;
#endif  // !_MSC_VER

ItemData::ItemData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemData::InitAsDefaultInstance() {
}

ItemData::ItemData(const ItemData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemData::~ItemData() {
  SharedDtor();
}

void ItemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemData_descriptor_;
}

const ItemData& ItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2fmint_2dmetadata_2eproto();  return *default_instance_;
}

ItemData* ItemData::default_instance_ = NULL;

ItemData* ItemData::New() const {
  return new ItemData;
}

void ItemData::Clear() {
  attributes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mint.metadata.AttributeData attributes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attributes;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .mint.metadata.AttributeData attributes = 1;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attributes(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .mint.metadata.AttributeData attributes = 1;
  for (int i = 0; i < this->attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attributes(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemData::ByteSize() const {
  int total_size = 0;
  
  // repeated .mint.metadata.AttributeData attributes = 1;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemData::MergeFrom(const ItemData& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributes_.MergeFrom(from.attributes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemData::CopyFrom(const ItemData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemData::IsInitialized() const {
  
  return true;
}

void ItemData::Swap(ItemData* other) {
  if (other != this) {
    attributes_.Swap(&other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemData_descriptor_;
  metadata.reflection = ItemData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace metadata
}  // namespace mint

// @@protoc_insertion_point(global_scope)
